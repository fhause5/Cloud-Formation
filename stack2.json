{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Mappings": {
    "MainAMI": {
      "eu-west-1": {
          "HVM64": "ami-089cc16f7f08c4457"
        },
      "eu-west-2": {
          "HVM64": "ami-00f6a0c18edb19300"
      },
      "eu-west-3": {
          "HVM64": "ami-0e11cbb34015ff725"
      },
      "eu-south-1": {
          "HVM64": "ami-08bb6fa4a2d8676d4"
      },
      "eu-north-1": {
          "HVM64": "ami-0e5f7b102d37f4801"
      },
      "eu-central-1": {
          "HVM64": "ami-0d359437d1756caa8"
      },
      "us-east-1": {
          "HVM64": "ami-0ac80df6eff0e70b5"
      }
    }
  },
  "Metadata" : {
    "AWS::CloudFormation::Interface": {
      "ParameterGroups": [
        {
          "Parameters": [
            "AvailabilityZone",
            "KeyName",
            "IPRangeAccess",
            "EnvType"
          ],
          "Label": {
            "default": "Settings of AWS."
          }
        }
      ],
      "ParameterLabels": {
        "AvailabilityZone":{
          "default": "Availability Zone"
        },
        "KeyName":{
          "default": "SSH Key Name"
        },
        "IPRangeAccess": {
          "default": "An IP address or range for access"
        },
        "EnvType": {
          "Default" : "test"
        }
      }
    }
  },
  "Conditions" : {
    "CreateProdResources" : {"Fn::Equals" : [{"Ref" : "EnvType"}, "prod"]},
    "CreateDevResources" : {"Fn::Equals" : [{"Ref" : "EnvType"}, "dev"]}
  },
  "Parameters": {
    "KeyName": {
      "Description": "Name of an existing EC2 key pair to enable SSH access to instances",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "ConstraintDescription": "Must be the name of an existing EC2 KeyPair",
      "MinLength": "1"
    },
    "AvailabilityZone": {
      "Description": "Pick an AvailabilityZone for the Primary Subnet. Public subnet will be created in here",
      "Type": "AWS::EC2::AvailabilityZone::Name"
    },
    "EnvType": {
      "Default" : "dev",
      "Type" : "String",
      "AllowedValues" : ["prod", "dev"],
      "ConstraintDescription" : "must specify prod or dev."
    }
  },
  "Resources": {
    "VPCID": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "InstanceTenancy": "default",
        "EnableDnsSupport": true,
        "EnableDnsHostnames": true,
        "Tags" : [ {"Key" : "Name", "Value" : { "Ref": "AWS::StackName" }} ]
      }
    },
    "SubnetPublic": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.0.0/24",
        "AvailabilityZone": {
          "Ref": "AvailabilityZone"
        },
        "MapPublicIpOnLaunch": true,
        "VpcId": {
          "Ref": "VPCID"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Ref": "AWS::StackName"
            }
          }
        ]
      }
    },
    "EC2Main": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "AvailabilityZone": {
          "Ref": "AvailabilityZone"
        },
        "DisableApiTermination": false,
        "EbsOptimized": false,
        "ImageId": {
          "Fn::FindInMap": [
            "MainAMI",
            {
              "Ref": "AWS::Region"
            },
            "HVM64"
          ]
        },
        "InstanceInitiatedShutdownBehavior": "stop",
        "InstanceType": "t2.nano",
        "KeyName": {
          "Ref": "KeyName"
        },
        "Monitoring": false,
        "SubnetId": {
          "Ref": "SubnetPublic"
        },
        "Tenancy": "default",
        "SecurityGroupIds": [
          {
            "Ref": "SGMain"
          }
        ],
         "Tags": [
          {
            "Key" : "Name",
            "Value" :  { "Fn::Join" : [" - ", [
              { "Ref": "AWS::StackName" },
              "EC2Main"
            ]]}
          }
        ],
        "UserData": {
          "Fn::Base64": {"Fn::Join": ["",[
                "#!/bin/bash","\n",
                "apt update -y","\n",
                "apt install -y nginx","\n",               
                "echo -e 'Example_env=",{"Fn::Join": ["-", ["dash",{"Ref": "EnvType"}]]},"\\n",
                "'"," >> /tmp/.env","\n"
              ]
            ]
          }
        }
      }
    },
    "ProdVolume" : {
      "Type" : "AWS::EC2::Volume",
      "Condition" : "CreateProdResources",
      "Properties" : {
        "Size" : "40",
        "AvailabilityZone" : { "Ref" : "AvailabilityZone" }
      }
    },
    "RouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VPCID"
        }
      }
    },
    "Route": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "RouteTableId": {
          "Ref": "RouteTable"
        },
        "GatewayId": {
          "Ref": "InternetGateway"
        }
      }
    },
    "InternetGateway": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {}
    },
    "SGMain": {
      "Type": "AWS::EC2::SecurityGroup",
      "DeletionPolicy" : "Retain",
      "Properties": {
        "GroupDescription": "Main Security Group",
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": 22,
            "ToPort": 22

          },
          {
            "IpProtocol": "tcp",
            "FromPort": 443,
            "ToPort": 443

          }
        ],
        "VpcId": {
          "Ref": "VPCID"
        }
      }
    },
    "SubnetRouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "SubnetPublic"
        },
        "RouteTableId": {
          "Ref": "RouteTable"
        }
      }
    },
    "VPCGatewayAttachment": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "VPCID"
        },
        "InternetGatewayId": {
          "Ref": "InternetGateway"
        }
      }
    }
  },
  "Outputs": {
    "VpcID": {
      "Description": "Vpc Id",
      "Value": { "Ref": "VPCID" },
      "Export": { "Name": { "Fn::Sub": "${AWS::StackName}-VPCID" }
      }
    },
    "SGMain": {
      "Description": "SecurityGroup Id",
      "Value": { "Ref": "SGMain" },
      "Export": { "Name": { "Fn::Sub": "${AWS::StackName}-SGMain" }
      }
    },
    "SubnetPublic": {
      "Description": "SubnetPublic",
      "Value": { "Ref": "SubnetPublic" },
      "Export": { "Name": { "Fn::Sub": "${AWS::StackName}-SubnetPublic" }
      }
    }   
  }
}
